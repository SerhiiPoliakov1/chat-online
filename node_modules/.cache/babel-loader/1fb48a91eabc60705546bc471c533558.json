{"ast":null,"code":"var _jsxFileName = \"/home/sergey/Documents/Documents/ReactProject/app/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport jwt_decode from \"jwt-decode\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  let [users, setUsers] = useState([]);\n  const [message, setMessage] = useState('');\n  let [currentUser, setCurrentUser] = useState({\n    id: null,\n    username: ''\n  });\n  const [recipientName, setRecipientName] = useState('');\n  let [userStartChat, setuserStartChat] = useState({});\n  let [chat, setChat] = useState({});\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    getMessagesFromChat();\n  });\n\n  function renderMessage() {\n    return messages[0];\n  }\n\n  const getMessages = async e => {\n    fetch(\"http://localhost:8080/api/user/\".concat(currentUser.id).concat(\"/chat/\").concat(userStartChat.id).concat(\"/message\"), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => response.json()).then(data => {\n      setMessages({ ...messages,\n        ...data\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const submit1 = async e => {\n    e.preventDefault();\n    await fetch(\"http://localhost:8080/users\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => response.json()).then(data => {\n      users = data;\n      console.log(users);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  function onUsername(e) {\n    setRecipientName(e.target.value);\n  }\n\n  function onMessage(e) {\n    setMessage(e.target.value);\n  }\n\n  const findByUsername = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:8080/users/byUsername?username=\".concat(recipientName), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n    const userForStartChat = await response.json();\n    setuserStartChat(userForStartChat);\n    console.log(\"USER START CHAT\" + userStartChat);\n\n    if (userStartChat !== null) {\n      getCurrentUser();\n      console.log(currentUser.id, userStartChat.id);\n\n      if (checkChatOnExist(currentUser.id, userStartChat.id) !== 200) {\n        console.log(\"CURRENT USER : \" + currentUser);\n        createChat();\n        setMessages([]);\n      }\n    }\n  };\n\n  const checkChatOnExist = async (recipientId, senderId) => {\n    const response = await fetch(\"http://localhost:8080/api/user/\".concat(senderId).concat(\"/chat/recipient/\").concat(recipientId), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n    const chatCheck = await response.json();\n\n    if (response.status == 200) {\n      setChat(chatCheck);\n      console.log(chatCheck);\n      setChat(chatCheck);\n      return 200;\n    }\n\n    return 500;\n  };\n\n  const getCurrentUser = async () => {\n    const response = await fetch(\"http://localhost:8080/users/current\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n    const cu = await response.json();\n    console.log(cu);\n    setCurrentUser(cu);\n    console.log(...currentUser);\n  };\n\n  const createChat = async () => {\n    const response = await fetch(\"http://localhost:8080/api/user/\".concat(currentUser.id).concat(\"/chat/add/\").concat(userStartChat.id), {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt'))\n      }\n    });\n    const newChat = await response.json();\n    setChat(newChat);\n    console.log(newChat);\n  };\n\n  const sendMessage = async e => {\n    let mess = {\n      recipientId: userStartChat.id,\n      senderId: currentUser.id,\n      message: message\n    };\n    e.preventDefault();\n    console.log(userStartChat);\n    console.log(currentUser);\n    await fetch(\"http://localhost:8080/api/user/\".concat(currentUser.id).concat(\"/message/send\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify(mess)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error(error);\n    });\n    console.log(chat);\n  };\n\n  const getMessagesFromChat = async () => {\n    if (currentUser.id !== undefined && userStartChat.id !== undefined) {\n      const response = await fetch(\"http://localhost:8080/api/user/\".concat(currentUser.id).concat(\"/chat/\").concat(userStartChat.id).concat(\"/message\"), {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      const listOfMessages = await response.json();\n      setMessages(listOfMessages);\n      console.log(messages);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mysettings-menu mysettings-find-button\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"d-flex\",\n        onSubmit: findByUsername,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control me-2\",\n          type: \"search\",\n          placeholder: \"Recipient`s username\",\n          \"aria-label\": \"Search\",\n          onChange: onUsername,\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", m.time, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 53\n        }, this), \" \", m.message, \"  \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: m.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 72\n        }, this)]\n      }, m.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 28\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mysettings-send-message-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Message\",\n          \"aria-label\": \"Recipient's username\",\n          onChange: onMessage,\n          \"aria-describedby\": \"button-addon2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary\",\n          type: \"submit\",\n          id: \"button-addon2\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"yWEIlgV2M7biqzRnLD3M/S11Bj8=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/sergey/Documents/Documents/ReactProject/app/src/pages/Home.js"],"names":["React","useEffect","useState","jwt_decode","Home","props","users","setUsers","message","setMessage","currentUser","setCurrentUser","id","username","recipientName","setRecipientName","userStartChat","setuserStartChat","chat","setChat","messages","setMessages","getMessagesFromChat","renderMessage","getMessages","e","fetch","concat","method","headers","sessionStorage","getItem","then","response","json","data","catch","error","console","submit1","preventDefault","log","onUsername","target","value","onMessage","findByUsername","userForStartChat","getCurrentUser","checkChatOnExist","createChat","recipientId","senderId","chatCheck","status","cu","newChat","sendMessage","mess","body","JSON","stringify","undefined","listOfMessages","map","m","time","author"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport jwt_decode from \"jwt-decode\";\nimport '../App.css';\n\n\nconst Home = (props) => {\n\n\n\n  let [users, setUsers] = useState([]);\n\n  const [message, setMessage] = useState('')\n\n  let [currentUser, setCurrentUser] = useState({ id: null, username: '' })\n\n  const [recipientName, setRecipientName] = useState('')\n  let [userStartChat, setuserStartChat] = useState({})\n  let [chat, setChat] = useState({})\n  const [messages, setMessages] = useState([])\n\n\nuseEffect(()=>{\n  getMessagesFromChat()\n})\n\n  function renderMessage() {\n    return messages[0]\n  }\n  const getMessages = async (e) => {\n\n\n    fetch(\"http://localhost:8080/api/user/\".concat(currentUser.id).concat(\"/chat/\").concat(userStartChat.id).concat(\"/message\"), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => response.json())\n      .then((data) => {\n\n\n        setMessages({ ...messages, ...data })\n\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n\n  }\n\n  const submit1 = async (e) => {\n    e.preventDefault();\n    await fetch(\"http://localhost:8080/users\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(response => response.json())\n      .then((data) => {\n        users = data\n        console.log(users)\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n\n  function onUsername(e) {\n    setRecipientName(e.target.value)\n\n  }\n\n  function onMessage(e) {\n    setMessage(e.target.value)\n\n  }\n\n\n  const findByUsername = async (e) => {\n    e.preventDefault();\n\n    const response = await fetch(\"http://localhost:8080/users/byUsername?username=\".concat(recipientName), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n        'Access-Control-Allow-Origin': '*'\n      }\n    })\n    const userForStartChat = await response.json();\n    setuserStartChat(userForStartChat)\n    console.log(\"USER START CHAT\" +userStartChat);\n    if (userStartChat !== null) {\n      getCurrentUser()\n      console.log(currentUser.id, userStartChat.id);\n      if (checkChatOnExist(currentUser.id, userStartChat.id) !== 200){\n        console.log(\"CURRENT USER : \" + currentUser);\n        createChat()\n        setMessages([])\n      }\n        \n    }\n\n  }\n\n\n  const checkChatOnExist = async (recipientId, senderId) => {\n    const response = await fetch(\"http://localhost:8080/api/user/\".concat(senderId).concat(\"/chat/recipient/\").concat(recipientId), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n        'Access-Control-Allow-Origin': '*'\n      }\n    })\n    const chatCheck = await response.json()\n    if (response.status == 200) {\n\n      setChat(chatCheck)\n      console.log(chatCheck);\n      setChat(chatCheck)\n      return 200;\n    }\n    return 500\n\n  }\n\n\n\n\n  const getCurrentUser = async () => {\n\n    const response = await fetch(\"http://localhost:8080/users/current\",\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n          'Access-Control-Allow-Origin': '*'\n        }\n      })\n    const cu = await response.json();\n    console.log(cu);\n    setCurrentUser(cu)\n    console.log(...currentUser);\n  }\n\n  const createChat = async () => {\n    const response = await fetch(\"http://localhost:8080/api/user/\".concat(currentUser.id).concat(\"/chat/add/\").concat(userStartChat.id),\n      {\n        method: 'POST',\n        headers: {\n\n          'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt'))\n\n        }\n      })\n    const newChat = await response.json();\n    setChat(newChat)\n\n    console.log(newChat);\n\n  }\n\n\n\n  const sendMessage = async (e) => {\n    let mess = {\n      recipientId: userStartChat.id,\n      senderId: currentUser.id,\n      message: message\n    }\n    e.preventDefault();\n    console.log(userStartChat)\n    console.log(currentUser)\n    await fetch(\"http://localhost:8080/api/user/\".concat(currentUser.id).concat(\"/message/send\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify(mess)\n    }).then(response => response.json())\n      .then((data) => {\n\n        console.log(data)\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    console.log(chat)\n  }\n\n\n\n  const getMessagesFromChat = async () => {\n   \n    if (currentUser.id !== undefined && userStartChat.id !== undefined) {\n      const response = await fetch(\"http://localhost:8080/api/user/\".concat(currentUser.id).concat(\"/chat/\").concat(userStartChat.id).concat(\"/message\"),\n        {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer '.concat(sessionStorage.getItem('jwt')),\n            'Access-Control-Allow-Origin': '*'\n          }\n        })\n\n      const listOfMessages = await response.json()\n      setMessages(listOfMessages)\n      console.log(messages);\n\n    }\n  }\n\n\n\n\n  return (\n\n    <div className=\"container\">\n      <div className=\"row mysettings-menu mysettings-find-button\" >\n        <form className=\"d-flex\" onSubmit={findByUsername}>\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Recipient`s username\" aria-label=\"Search\" onChange={onUsername} name=\"username\" />\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n        </form>\n      </div>\n\n      <div>\n       \n        {messages.map(m => <li key={m.id}> {m.time} <br/> {m.message}  <b>{m.author}</b></li>)}\n      </div>\n\n\n      <form onSubmit={sendMessage}>\n        <div className=\"mysettings-send-message-button\" >\n          <input type=\"text\" className=\"form-control\" placeholder=\"Message\" aria-label=\"Recipient's username\" onChange={onMessage} aria-describedby=\"button-addon2\" />\n          <button className=\"btn btn-outline-secondary\" type=\"submit\" id=\"button-addon2\" >Send</button>\n\n        </div>\n      </form>\n\n    </div>\n\n  )\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}